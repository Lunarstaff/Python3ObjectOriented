对象是一个有着相应行为的数据的集合

统一建模语言：UML（Unified Modeling Language）

大多数设计模式都会依赖两个基本的原则，称之为“组合”和“继承”：
    -组合，是把一些对象收集在一起组成一个新的对象。当一个对象是另一个对象的一部分的时候，组合是个好的选择。
     组合是提供抽象层次非常好的方式。

    -聚合，聚合几乎和组合一样，不同的是，聚合对象可以独立存在的。

    -继承，

    -抽象类，一个没有实现任何方法的类，也叫接口。

    -多态，多态是依据一个类的不同子类的实现而区别对待这个类的能力。在Python中这种多态性通常称为鸭子类型

    -多重继承，允许一个子类从多个父类那里继承功能。
案例学习：
【图书馆目录】：
图书馆通过使用卡片目录来追踪它们的藏书已经好几个世纪了，然而最近电子藏书理流行。
现代图书馆有一个基于Web的目录，我们可以在自己家里查询藏书。
目录包含书的列表。人们搜索这个目录找特定主题、特定标题，或者特定作者的书。
书可以通过一个唯一的国际标准书号（ISBN）区分。每一本书都有一个杜威十进制数（DDS）来帮助我们在
特定书架上找到它。
这个简单的分析告诉了我们在这个系统里的一些明显的对象。我们快速的识别出书是最重要的对象，他有一
些前面已经提到的属性，比如作者、标题、主题、ISBN、DDS号及目录，作为书的一种管理方式。
我们也注意到有一些其他对象可能需要也可能不需要在系统里建模。出于编写目录的目的，所有我们就是通过
一本书时原author_name属性来搜索一本书。但是作者也是对象，并且我们可能需要存一些关于作者的其他数
据。

总结：
这一章，我们快速地浏览了面向对象的术语，专注于面向对象设计。我们学会了如何把两个不同的对象分成一个不
同的分类，并且通过类的接口描述了这些类的属性和行为。特别的是，我们讲了：
    -类和对象
    -抽象、封装，以及信息隐藏
    -设计一个公共接口
    -对象关系：关联、组合和继承
    -为了娱乐和交流的基本的UML语法