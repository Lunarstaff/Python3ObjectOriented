名称：
    房地产应用程序

概要：
    允许一个代理来管理用于购买（Purchase）或者租赁（Rental）的房产（Property）。
    有两种类型的房产：公寓和房子（House）。
    代理需要能够输入一些新房产的相关细节，列出目前所有手头的房产，并且把一个房产标记成售出或者已租。

技术指导：
    通过命令提示符进行交互。为了简便起见，不需要担心编辑房产的具体细节或者被 出售之后重启激活房产等细节。

设计：
    房产类型：
    Property（房产）
        面积
        卧室及浴室的数量

    房产类型的子类：House（住宅）、 Apartment（公寓）
    House（住宅）
        仓库的数量
        是否有车库，车库的属性
        是否有院子，院子是否有围墙
    Apartment（公寓）
        是否有一个阳台
        是否套间
        朝向是什么

    行为：购买（Purchase）、租赁（Rental）
    购买（Purchase）
        购买的价格
        估计每年的物业税
    租赁（Rental）
        每月的房租
        是否包含家具
        是否包含公共设施

    代理人（Agent）
        占有所有房产的列表
        显示房产
        创建新的房产（需要提示用户每一个房产类型的信息）

    注./类关系图.png
    这些类时硕最难的部分就是确保在继承层次结构里调用超类的方法。

Note：
    继承类的顺序是非常重要的。如果我们写了class HouseRental(House, Rental)
    而不是class HouseRental(Rental, House)的话，display()方法就不会调用Rental。display()
    在代码中的HouseRental中，当调用display()来方法时，它指向了Rental中的方法，
    这个方法又会调用super().display()来得到House